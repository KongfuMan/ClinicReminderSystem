{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/history/history.component.css","webpack:///./src/app/home/history/history.component.html","webpack:///./src/app/home/history/history.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/list/list.component.css","webpack:///./src/app/home/list/list.component.html","webpack:///./src/app/home/list/list.component.ts","webpack:///./src/app/home/send/send.component.css","webpack:///./src/app/home/send/send.component.html","webpack:///./src/app/home/send/send.component.ts","webpack:///./src/app/home/services/home.service.ts","webpack:///./src/app/model/doctor.ts","webpack:///./src/app/model/patient.ts","webpack:///./src/app/model/reminder.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/user/login/login.component.css","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/login/services/authentication.service.ts","webpack:///./src/app/user/signup/signup.component.css","webpack:///./src/app/user/signup/signup.component.html","webpack:///./src/app/user/signup/signup.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\\\" integrity=\\\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\\\" crossorigin=\\\"anonymous\\\">\\n  </h1>\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Clinic Reminder System';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule} from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { UserComponent } from './user/user.component';\nimport { HomeComponent } from './home/home.component';\nimport {AuthenticationService} from './user/login/services/authentication.service';\n\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport { SignupComponent } from './user/signup/signup.component';\nimport {appRoutes} from './routes'\nimport {HomeService} from './home/services/home.service';\nimport {JwtModule,JwtInterceptor,JwtHelperService} from '@auth0/angular-jwt';\nimport { SendComponent } from './home/send/send.component';\nimport { ListComponent } from './home/list/list.component';\nimport { HistoryComponent } from './home/history/history.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    UserComponent,\n    HomeComponent,\n    SignupComponent,\n    SendComponent,\n    ListComponent,\n    HistoryComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: ()=>localStorage.getItem('token'),\n        whitelistedDomains: ['localhost:8080'],\n        headerName: 'Authorization',\n        authScheme: 'Bearer ',\n        throwNoTokenError: false,\n        skipWhenExpired: true\n      }\n    })\n  ],\n  providers: [\n    AuthenticationService,\n    HomeService,\n    JwtHelperService,\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  history works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.css']\n})\nexport class HistoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<html lang=\\\"en\\\">\\n<!--<head>-->\\n  <!--<meta charset=\\\"utf-8\\\">-->\\n  <!--<title>Doctor Dashboard</title>-->\\n  <!--<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">-->\\n<!--</head>-->\\n<body>\\n<div class=\\\"deep-purple lighten-5\\\" align=\\\"end\\\">{{\\\"Welcom Doctor \\\" + doctor.userName + \\\" !\\\"}}</div>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s8 offset-s2\\\">\\n      <div class=\\\"card grey lighten-2\\\">\\n        <div class=\\\"card-tabs\\\">\\n          <ul class=\\\"tabs tabs-fixed-width tabs-transparent\\\">\\n            <li class=\\\"tab\\\">\\n              <a routerLink='/home/send' routerLinkActive='active'>Send A Reminder</a>\\n            </li>\\n            <li class=\\\"tab\\\">\\n              <a routerLink='/home/list' routerLinkActive='active'>Check Reminder List</a>\\n            </li>\\n            <li class=\\\"tab\\\">\\n              <a  routerLink='/home/history' routerLinkActive='active'>Check History Reimder</a>\\n            </li>\\n          </ul>\\n        </div>\\n        <div class=\\\"card-content white\\\">\\n          <div class=\\\"row\\\">\\n            <router-outlet></router-outlet>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n</body>\\n</html>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {HomeService} from './services/home.service';\nimport {Doctor} from '../model/doctor';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  public doctor = new Doctor(null,null,null);\n  private url = \"login\";\n\n  constructor(private router:Router,\n              private homeService: HomeService) { }\n\n  ngOnInit() {\n    let token = localStorage.getItem('token')\n    if (token == null){\n      console.log(\"token is null, navigate to login page\");\n      this.router.navigate([this.url]);\n    }\n    let username = this.homeService.decodeToken();\n    this.doctor.userName = username;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  list works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form class=\\\"col s12 white\\\" #sendAReminderForm=\\\"ngForm\\\" (ngSubmit)=\\\"OnSubmit()\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"input-field col s6\\\">\\n      <input class=\\\"validate\\\" type=\\\"text\\\" name=\\\"UserName\\\" #UserName=\\\"ngModel\\\" [(ngModel)]=\\\"reminder.description\\\" required>\\n      <label data-error=\\\"Required field!\\\">Descrpition</label>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"input-field col s6\\\">\\n      <input class=\\\"validate\\\" type=\\\"password\\\" name=\\\"Password\\\" #Password=\\\"ngModel\\\" [(ngModel)]=\\\"reminder.duration\\\" required minlength=\\\"3\\\">\\n      <label data-error=\\\"Required field!\\\">Duration</label>\\n      <!--<label [attr.data-error]=\\\"Password.errors!=null?(Password.errors.required?'Required field!':'Minimum 3 characters needed'):''\\\">Password</label>-->\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"input-field col s6\\\">\\n      <input class=\\\"validate\\\" type=\\\"text\\\" name=\\\"Email\\\" #Email=\\\"ngModel\\\" [(ngModel)]=\\\"reminder.priority\\\">\\n      <label data-error=\\\"Invalid email!\\\">Priority Level</label>\\n    </div>\\n  </div>\\n  <!--<div class=\\\"row\\\">-->\\n    <!--<select>-->\\n      <!--<option *ngFor=\\\"let patient of patients\\\">{{patient.name}}</option>-->\\n      <!--<option>HIGHT</option>-->\\n      <!--<option>HIGHT</option>-->\\n    <!--</select>-->\\n  <!--</div>-->\\n  <!--<div class=\\\"row\\\">-->\\n    <!--<label>Select the patient</label>-->\\n    <!--<select ng-model=\\\"selectedName\\\" ng-options=\\\"x for x in names\\\">-->\\n    <!--</select>-->\\n  <!--</div>-->\\n  <!--<div class=\\\"row\\\">-->\\n    <!--<div>-->\\n      <!--<label>Colour</label>-->\\n      <!--<div>-->\\n        <!--<select [(ngModel)]=\\\"car.colour\\\">-->\\n        <!--<option *ngFor=\\\"let x of colours\\\" [value]=\\\"x.id\\\" [selected]=\\\"car.color.id == x.id\\\">{{x.name}}</option>-->\\n        <!--</select>-->\\n      <!--</div>-->\\n    <!--</div>-->\\n  <!--</div>-->\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"input-field col s12\\\">\\n      <button [disabled]=\\\"!sendAReminderForm.valid\\\" class=\\\"btn-large btn-submit\\\" type=\\\"submit\\\">Submit</button>\\n    </div>\\n  </div>\\n\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Reminder} from '../../model/reminder';\nimport {Patient} from '../../model/patient';\n\n@Component({\n  selector: 'app-send',\n  templateUrl: './send.component.html',\n  styleUrls: ['./send.component.css']\n})\nexport class SendComponent implements OnInit {\n  public reminder = new Reminder();\n  public patients = [];\n\n  constructor() {\n    this.patients.push(new Patient(\"patient1\",1));\n    this.patients.push(new Patient(\"patient2\",2));\n    this.patients.push(new Patient(\"patient3\",3));\n    this.patients.push(new Patient(\"patient4\",4));\n  }\n\n  ngOnInit() {\n  }\n\n  OnSubmit(){\n    console.log(\"send a Reminder submit\");\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {JwtHelperService} from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n  private url:string = \"http://localhost:8080/authJwt\"\n\n  constructor(private http: HttpClient,\n              private jwtService : JwtHelperService\n  ) { }\n\n  decodeToken(){\n    return this.jwtService.decodeToken(localStorage.getItem('token')).sub;;\n  }\n}\n","import {Reminder} from './reminder';\n\nexport class Doctor {\n  constructor(\n    public userName: string,\n    public password: string,\n    public reminders: Reminder[],\n    // public email: string\n  ) { }\n}\n","export class Patient{\n  constructor(\n    public name:string,\n    public id:number\n  ){}\n}\n","export enum PRIORITY{\n  HIGH,\n  MIDDLE,\n  LOW\n}\n\nexport class Reminder{\n  public description:string;\n  public duration:Date;\n  public patientId:number;\n  public doctorId:number;\n  public priority:PRIORITY\n\n  constructor(){}\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './user/login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './user/signup/signup.component';\nimport { UserComponent } from './user/user.component';\nimport {SendComponent} from './home/send/send.component';\nimport {ListComponent} from './home/list/list.component';\nimport {HistoryComponent} from './home/history/history.component';\n\nexport const appRoutes: Routes = [\n  //要注意这里这里的顺序，angular总是从前往后解析\n  {\n    path:'home',\n    redirectTo:'home/send',\n    pathMatch: 'full'\n  },\n  {\n    path: 'login',\n    component : UserComponent,\n    children : [{path:\"\" , component:LoginComponent}]\n  },\n  {\n    path: 'signup',\n    component : UserComponent,  //correspond to the base component\n    children : [{path:\"\" , component:SignupComponent}]  //routes to child component\n  },\n  {\n    path: 'home',\n    component : HomeComponent,\n    children: [{path:'send', component:SendComponent},\n      {path:'list', component:ListComponent},\n      {path:'history',component:HistoryComponent}]\n  },\n  {\n    path:'',\n    redirectTo:'home',\n    pathMatch: 'full'\n  }\n];\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <!--<h2>Login</h2>-->\\n  <form #userForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\n    <div class=\\\"form-group\\\">\\n      <label data-error=\\\"Required field!\\\">Username</label>\\n      <!-- 注意ngModel跟name属性的顺序不能搞反了 -->\\n      <input type=\\\"text\\\" required #name=\\\"ngModel\\\" class=\\\"validate\\\" [class.is-invalid]=\\\"name.invalid && name.touched\\\"\\n             [(ngModel)]=\\\"userModel.userName\\\" name=\\\"userName\\\">\\n      <!--<small class=\\\"text-danger\\\" [class.d-none]=\\\"name.is-valid || name.untouched\\\">name is required</small>-->\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label data-error=\\\"Required field!\\\">Password</label>\\n      <input type=\\\"password\\\" required #password=\\\"ngModel\\\" class=\\\"validate\\\" [class.is-invalid]=\\\"password.invalid && password.touched\\\"\\n             [(ngModel)]=\\\"userModel.password\\\" name=\\\"password\\\">\\n      <!--<small class=\\\"text-danger\\\" [class.d-none]=\\\"email.is-valid || email.untouched\\\">email is required</small>-->\\n    </div>\\n\\n    <button [disabled]=\\\"!userForm.valid\\\" class=\\\"btn-large btn-submit\\\" type=\\\"submit\\\">Login</button>\\n  </form>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthenticationService} from './services/authentication.service'\nimport {Doctor} from 'src/app/model/doctor';\nimport {first} from 'rxjs/internal/operators';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public userModel = new Doctor(\"\",\"\",null);\n  public loading = false;\n  public submitted = false;\n  public returnUrl: string = 'home';\n  public error = '';\n  public jwtTokenName = 'token';\n\n  constructor(\n    private authenticationService: AuthenticationService,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n    console.log(this.userModel);\n    this.authenticationService.login(this.userModel.userName, this.userModel.password)\n      .pipe(first())\n      .subscribe(\n        data => {\n          if (data != null){\n            this.router.navigate([this.returnUrl]);\n          }\n        },\n        error => {\n          this.error = error;\n          this.loading = false;\n        });\n  }\n\n  logout() {\n    localStorage.remove(this.jwtTokenName);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Doctor} from 'src/app/model/doctor';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/internal/operators';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthenticationService {\n  private url = 'http://localhost:8080/login';\n\n  constructor(private http: HttpClient\n             ) { }\n\n  login(username:string, password:string):Observable<any>{\n    console.log(\"authService.login()\");\n    return this.http.post<any>(this.url, { \"userName\" : username, \"password\":password })\n      .pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user && user.token) {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          localStorage.setItem('token', JSON.stringify(user));\n        }\n        return user;\n      }));\n  }\n\n  logout(){\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n  }\n}\n","module.exports = \"\"","module.exports = \"<form class=\\\"col s12 white\\\" #userRegistrationForm=\\\"ngForm\\\" (ngSubmit)=\\\"OnSubmit(userRegistrationForm)\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"input-field col s6\\\">\\n      <input class=\\\"validate\\\" type=\\\"text\\\" name=\\\"UserName\\\" #UserName=\\\"ngModel\\\" [(ngModel)]=\\\"user.userName\\\" required>\\n      <label data-error=\\\"Required field!\\\">UserName</label>\\n    </div>\\n\\n    <div class=\\\"input-field col s6\\\">\\n      <input class=\\\"validate\\\" type=\\\"password\\\" name=\\\"Password\\\" #Password=\\\"ngModel\\\" [(ngModel)]=\\\"user.password\\\" required minlength=\\\"3\\\">\\n      <label data-error=\\\"Required field!\\\">Password</label>\\n      <!--<label [attr.data-error]=\\\"Password.errors!=null?(Password.errors.required?'Required field!':'Minimum 3 characters needed'):''\\\">Password</label>-->\\n    </div>\\n  </div>\\n  <!--<div class=\\\"row\\\">-->\\n    <!--<div class=\\\"input-field col s6\\\">-->\\n    <!--<input class=\\\"validate\\\" type=\\\"text\\\" name=\\\"Email\\\" #Email=\\\"ngModel\\\" [(ngModel)]=\\\"user.email\\\">-->\\n    <!--<label data-error=\\\"Invalid email!\\\">Email</label>-->\\n    <!--</div>-->\\n  <!--</div>-->\\n  <!--<div class=\\\"row\\\">-->\\n  <!--<div class=\\\"input-field col s6\\\">-->\\n  <!--<input type=\\\"text\\\" name=\\\"FirstName\\\" #FirstName=\\\"ngModel\\\" [(ngModel)]=\\\"user.FirstName\\\">-->\\n  <!--<label>First Name</label>-->\\n  <!--</div>-->\\n  <!--<div class=\\\"input-field col s6\\\">-->\\n  <!--<input type=\\\"text\\\" name=\\\"LastName\\\" #LastName=\\\"ngModel\\\" [(ngModel)]=\\\"user.LastName\\\">-->\\n  <!--<label>Last Name</label>-->\\n  <!--</div>-->\\n  <!--</div>-->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"input-field col s12\\\">\\n      <button [disabled]=\\\"!userRegistrationForm.valid\\\" class=\\\"btn-large btn-submit\\\" type=\\\"submit\\\">Submit</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Doctor} from '../../model/doctor';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  public user: Doctor = new Doctor(null,null,null);\n\n  constructor() { }\n\n\n  ngOnInit(): void {\n  }\n\n  OnSubmit(userRegistrationForm){\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s8 offset-s2\\\">\\n      <div class=\\\"card grey lighten-2\\\">\\n        <div class=\\\"card-tabs\\\">\\n          <ul class=\\\"tabs tabs-fixed-width tabs-transparent\\\">\\n            <li class=\\\"tab\\\">\\n              <a routerLink='/login' routerLinkActive='active'>Sign In</a>\\n            </li>\\n            <li class=\\\"tab\\\">\\n              <a  routerLink='/signup' routerLinkActive='active'>Sign Up</a>\\n            </li>\\n          </ul>\\n        </div>\\n        <div class=\\\"card-content white\\\">\\n          <div class=\\\"row\\\">\\n            <router-outlet></router-outlet>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}