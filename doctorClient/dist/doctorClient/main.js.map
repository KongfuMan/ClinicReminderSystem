{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/error/error.component.css","webpack:///./src/app/error/error.component.html","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/history/history.component.css","webpack:///./src/app/home/history/history.component.html","webpack:///./src/app/home/history/history.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/list/list.component.css","webpack:///./src/app/home/list/list.component.html","webpack:///./src/app/home/list/list.component.ts","webpack:///./src/app/home/reminder-item/reminder-item.component.css","webpack:///./src/app/home/reminder-item/reminder-item.component.html","webpack:///./src/app/home/reminder-item/reminder-item.component.ts","webpack:///./src/app/home/send/send.component.css","webpack:///./src/app/home/send/send.component.html","webpack:///./src/app/home/send/send.component.ts","webpack:///./src/app/home/services/doctor.service.ts","webpack:///./src/app/home/services/web-socket.service.ts","webpack:///./src/app/loader/loader.component.css","webpack:///./src/app/loader/loader.component.html","webpack:///./src/app/loader/loader.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/model/doctor.ts","webpack:///./src/app/model/reminder.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/loader.service.ts","webpack:///./src/app/services/loaderinterceptor.ts","webpack:///./src/app/user/signin/signin.component.css","webpack:///./src/app/user/signin/signin.component.html","webpack:///./src/app/user/signin/signin.component.ts","webpack:///./src/app/user/signup/signup.component.css","webpack:///./src/app/user/signup/signup.component.html","webpack:///./src/app/user/signup/signup.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {RouterModule, Routes} from '@angular/router';\nimport {NgModule} from '@angular/core';\n\nimport { SigninComponent } from './user/signin/signin.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './user/signup/signup.component';\nimport {SendComponent} from './home/send/send.component';\nimport {ListComponent} from './home/list/list.component';\nimport {HistoryComponent} from './home/history/history.component';\nimport {AuthGuard} from \"./guards/auth.guard\";\nimport {ReminderItemComponent} from './home/reminder-item/reminder-item.component';\nimport {ErrorComponent} from './error/error.component';\n\nconst appRoutes: Routes = [\n  //要注意这里这里的顺序，angular总是从前往后解析\n  { path: '',\n    component: HomeComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path:'home',\n    redirectTo:'home/send',\n    pathMatch: 'full'\n  },\n  {\n    path: 'signin',\n    component : SigninComponent,\n  },\n  {\n    path: 'signup',\n    component : SignupComponent,  //correspond to the base component\n  },\n  {\n    path: 'home',\n    component : HomeComponent,\n    children: [\n      {path:'send', component:SendComponent},\n      {path:'list', component:ListComponent},\n      {path:'list/:id', component:ReminderItemComponent},\n      {path:'history',component:HistoryComponent}\n      ]\n  },\n  {\n    path:'',\n    redirectTo:'home/send',\n    pathMatch: 'full'\n  },\n  {\n    path:'not-found',\n    component:ErrorComponent,\n    data:{message: 'Page not found'}\n  },\n  {\n    path: '**',\n    redirectTo: '/not-found'\n  }\n];\n\n@NgModule({\n  imports:[\n    RouterModule.forRoot(appRoutes)\n  ],\n  exports:[\n    RouterModule\n  ]\n})\n\nexport class AppRoutingModule{\n\n}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-loader></app-loader>\\n<div>\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\\n\"","import {Component, NgZone} from '@angular/core';\nimport {Router} from '@angular/router';\n// import {HomeService} from './home/services/home.service';\nimport {AuthenticationService} from './services/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Clinic Reminder System';\n\n  //ngZone is used to fix the bug that\n  //router.navigate is not execute inside the subscribe()\n  constructor(private router:Router,\n              private ngZone:NgZone,\n              private authService: AuthenticationService) {\n  }\n\n  //check if user has logged in at beginning\n  ngOnInit(){\n    //becareful you need to subscribe first\n    this.authService.isAuthenticated().subscribe(loggedin=>{\n      if (!loggedin){\n        // this.router.navigate()\n        this.ngZone.run(()=>{\n          this.router.navigate([\"/signin\"]);\n        })\n\n      }else{\n        this.ngZone.run(()=>{\n          this.router.navigate([\"/home/send\"]);\n        })\n      }\n    });\n    this.authService.checkJwtLogin();\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { SigninComponent } from './user/signin/signin.component';\nimport { UserComponent } from './user/user.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthenticationService } from './services/authentication.service';\n\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { SignupComponent } from './user/signup/signup.component';\nimport { AppRoutingModule } from './app-routing.module'\nimport { JwtModule,JwtInterceptor,JwtHelperService } from '@auth0/angular-jwt';\nimport { SendComponent } from './home/send/send.component';\nimport { ListComponent } from './home/list/list.component';\nimport { HistoryComponent } from './home/history/history.component';\nimport { WebSocketService } from './home/services/web-socket.service';\nimport { DoctorService } from './home/services/doctor.service';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AuthGuard } from \"./guards/auth.guard\";\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { ReminderItemComponent } from './home/reminder-item/reminder-item.component';\nimport { ErrorComponent } from './error/error.component';\nimport { environment } from '../environments/environment';\n\nimport { MaterialModule } from './material.module';\nimport { LoaderComponent } from './loader/loader.component';\nimport { LoaderInterceptor } from './services/loaderinterceptor';\nimport { LoaderService } from './services/loader.service';\n\n// root module not need to export anything\n// other modules don't need to import root module\n@NgModule({\n  declarations: [\n    AppComponent,\n    SigninComponent,\n    SignupComponent,\n    UserComponent,\n    HomeComponent,\n    SendComponent,\n    ListComponent,\n    HistoryComponent,\n    HeaderComponent,\n    FooterComponent,\n    ReminderItemComponent,\n    ErrorComponent,\n    LoaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: ()=>localStorage.getItem(environment.jwtName),\n        whitelistedDomains: ['localhost:8080'],\n        headerName: 'Authorization',\n        authScheme: 'Bearer ',\n        throwNoTokenError: false,\n        skipWhenExpired: true\n      }\n    }),\n    BrowserAnimationsModule,\n    MaterialModule\n  ],\n  providers: [\n    AuthenticationService,\n    JwtHelperService,\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    {provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true },\n    WebSocketService,\n    DoctorService,\n    AuthGuard,\n    LoaderService\n  ],\n  // A root NgModule always has a root component that is created during bootstrap,\n  // but any NgModule can include any number of additional components,\n  // which can be loaded through the router(this.router.navigate) or\n  // created through the template(selector of subcomponent as a HTML tag)\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h3>\\n  {{errorMessage}}\\n</h3>\\n\"","// for all the url that doesn't exist\nimport { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Data} from '@angular/router';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n  errorMessage:string;\n  constructor(private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(\n      (data:Data)=>{\n        this.errorMessage = data['message'];\n      }\n    )\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row >\\n    <span class=\\\"mx-auto\\\">Clinic Reminder System</span>\\n  </mat-toolbar-row>\\n  <mat-toolbar-row>\\n    <span class=\\\"mx-auto\\\">© 2018-{{date | date:'yyyy'}} Copyright Reserved</span>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  date: Date = new Date();\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","﻿import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {AuthenticationService} from '../services/authentication.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(private router: Router,\n                private authService:AuthenticationService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      return this.authService.isAuthenticated();\n    }\n}\n","module.exports = \".fill-remaining-space{\\n  flex: 1 1 auto;\\n}\\n\\n.logo-text{\\n  color:white;\\n}\\n\\n.logo-text:hover{\\n  text-decoration: none;\\n}\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n   <span>\\n     <a routerLink=\\\"/\\\" routerLinkActive='active' class=\\\"logo-text\\\">Clinic Reminder System</a>\\n   </span>\\n   <span class=\\\"fill-remaining-space\\\"></span>\\n   <span>\\n      <button mat-button *ngIf=\\\"username.length===0\\\">\\n        <a routerLink=\\\"/signin\\\">Signin</a>\\n      </button>\\n      <button mat-button *ngIf=\\\"username.length!==0\\\" (click)=\\\"onSignout()\\\">\\n        Signout\\n      </button>\\n   </span>\\n  <span>\\n    <button mat-button>My Profile</button>\\n  </span>\\n</mat-toolbar>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport {AuthenticationService} from '../services/authentication.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  username:string = '';\n  constructor(private jwtService: JwtHelperService,\n              private authService: AuthenticationService\n  ) { }\n\n  ngOnInit() {\n    const user = this.jwtService.decodeToken(localStorage.getItem(environment.jwtName));\n    if (user){\n      this.username = user.sub;\n    }\n\n  }\n\n  onSignout(){\n    console.log('signout clicked');\n    this.authService.signout();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  history works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.css']\n})\nexport class HistoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"nav{\\n  margin-left: 5%;\\n}\\n\\nmat-card-content.content{\\n  margin-left: 10%;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div>\\n    <app-header></app-header>\\n  </div>\\n  <div>\\n    <mat-card class=\\\"border border-primary\\\">\\n        <mat-card-header>\\n          <nav mat-tab-nav-bar>\\n              <a class=\\\"mx-5\\\" mat-tab-link routerLink='/home/send' routerLinkActive='active'>Create Reminder\\n                <mat-icon class=\\\"example-tab-icon\\\">create</mat-icon>\\n              </a>\\n              <a class=\\\"mx-5\\\" mat-tab-link routerLink='/home/list' routerLinkActive='active'>Reminder List\\n                <mat-icon class=\\\"example-tab-icon\\\">format_list_bulleted</mat-icon>\\n              </a>\\n              <a class=\\\"mx-5\\\" mat-tab-link routerLink='/home/history' routerLinkActive='active'>History Reminders\\n                <mat-icon class=\\\"example-tab-icon\\\">history</mat-icon>\\n              </a>\\n          </nav>\\n        </mat-card-header>\\n        <br>\\n        <mat-card-content>\\n            <router-outlet></router-outlet>\\n        </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <div>\\n    <app-footer></app-footer>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\"","import {Component, Input, OnInit} from '@angular/core';\n// import {Router} from '@angular/router';\nimport {Doctor} from '../model/doctor';\n// import {AuthenticationService} from '../services/authentication.service';\n// import {environment} from \"../../environments/environment\";\nimport {JwtHelperService} from \"@auth0/angular-jwt\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  public doctor = new Doctor(null,null,null,null);\n\n  constructor(private jwtService:JwtHelperService) { }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \".card-done{\\n  max-width: 80%;\\n  color: white;\\n  background-color: #4caf50;\\n  align-content:center;\\n}\\n\\n.card-undone{\\n  max-width: 80%;\\n  color: white;\\n  background-color: #e57373;\\n  align-content:center;\\n}\\n\\nmat-card{\\n  margin-left: 5.6%;\\n}\\n\\nmat-card-actions.detail{\\n  margin-left: 50%;\\n}\\n\"","module.exports = \"<div *ngFor=\\\"let reminder of reminders\\\">\\n  <mat-card [ngClass]=\\\"onSelectClass(reminder)\\\" >\\n    <mat-card-content>\\n      <p class=\\\"center\\\">Description:{{reminder.description}}</p>\\n      <p class=\\\"center\\\">Create at:{{reminder.create_at | date:\\\"HH/MM/dd/yy\\\"}}</p>\\n      <p class=\\\"center\\\">Priority:{{reminder.priority}}</p>\\n      <p class=\\\"center\\\">Duration:{{reminder.duration | date: \\\"HH\\\"}}</p>\\n      <p class=\\\"center\\\">Done:{{reminder.done}}</p>\\n    </mat-card-content>\\n    <mat-card-actions class=\\\"detail\\\">\\n      <a [routerLink]=\\\"['/home/list',reminder.reminderId]\\\" class=\\\"mat-raised-button\\\">Details</a>\\n    </mat-card-actions>\\n  </mat-card>\\n  <br>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Reminder} from '../../model/reminder';\nimport {DoctorService} from '../services/doctor.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\n\nexport class ListComponent implements OnInit {\n  public reminders: Reminder[]= [];\n  constructor(private doctorService: DoctorService) { }\n\n  ngOnInit() {\n    this.doctorService.getAllReminders().subscribe((data:any)=>{\n      if (data){\n        for(let reminder of data){\n          this.reminders.push(reminder);\n        }\n      }\n    })\n  }\n\n  onSelectClass(reminder){\n    let classes = {\n      \"card-done\": reminder.done,\n      \"card-undone\": !reminder.done\n    }\n    return classes;\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row center-align\\\">\\n  <div class=\\\"col s12 m6\\\">\\n    <div class=\\\"card blue-grey darken-1\\\">\\n      <div class=\\\"card-content white-text\\\">\\n        <span class=\\\"card-title\\\">{{reminder.reminderId}}</span>\\n      </div>\\n      <div class=\\\"card-action\\\">\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Reminder} from '../../model/reminder';\nimport {ActivatedRoute, Params} from '@angular/router';\n\n@Component({\n  selector: 'app-reminder-item',\n  templateUrl: './reminder-item.component.html',\n  styleUrls: ['./reminder-item.component.css']\n})\nexport class ReminderItemComponent implements OnInit {\n  reminder: Reminder = new Reminder();\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    // this.reminder.reminderId = this.route.snapshot.params['id'];\n\n    this.route.params.subscribe( (params:Params)=>this.reminder.reminderId = params['id']);\n\n    this.reminder.description = 'this is a fake reminder';\n    this.reminder.priority = 1;\n    this.reminder.duration = 1234;\n    this.reminder.create_at = 128319241924;\n  }\n\n}\n","module.exports = \".send-container {\\n  display: flex;\\n  flex-direction: column;\\n  margin-left: 20%;\\n}\\n\\n.send-container > * {\\n  width: 60%;\\n}\\n\\nbutton.submit{\\n  margin-left: 40%;\\n}\\n\"","module.exports = \"<form #sendAReminderForm=\\\"ngForm\\\" (ngSubmit)=\\\"OnSubmit()\\\">\\n  <div class=\\\"send-container\\\">\\n    <mat-form-field hideRequiredMarker>\\n      <input matInput placeholder=\\\"Input Description\\\" required name=\\\"Description\\\"\\n             #Description=\\\"ngModel\\\" [(ngModel)]=\\\"reminder.description\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field hideRequiredMarker>\\n      <input matInput placeholder=\\\"Input Duration(Hours)\\\" required name=\\\"Duration\\\" #Duration=\\\"ngModel\\\" [(ngModel)]=\\\"reminder.duration\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field hideRequiredMarker>\\n      <mat-select placeholder=\\\"Select a patient\\\"  name=\\\"Patients\\\" #Patients=\\\"ngModel\\\" [(ngModel)] = \\\"reminder.patientName\\\">\\n        <mat-option *ngFor=\\\"let p of patients\\\" [value] = \\\"p\\\">\\n          {{p}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field hideRequiredMarker>\\n      <mat-select placeholder=\\\"Set Priority\\\" name=\\\"Priority\\\" #Priority=\\\"ngModel\\\" [(ngModel)] = \\\"reminder.priority\\\">\\n        <mat-option *ngFor=\\\"let p of priorities\\\" [value] = \\\"p.value\\\">\\n          {{p.viewValue}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <button class=\\\"submit\\\" mat-flat-button [disabled]=\\\"!sendAReminderForm.valid\\\" type=\\\"submit\\\">Submit\\n      <mat-icon>send</mat-icon>\\n    </button>\\n  </div>\\n</form>\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Reminder} from '../../model/reminder';\nimport {WebSocketService} from '../services/web-socket.service';\nimport {environment} from \"../../../environments/environment\";\nimport {Patient} from \"../../model/patient\";\nimport {DoctorService} from \"../services/doctor.service\";\n\n@Component({\n  selector: 'app-send',\n  templateUrl: './send.component.html',\n  styleUrls: ['./send.component.css']\n})\nexport class SendComponent implements OnInit {\n  public reminder = new Reminder();\n  public patients:string[] = [];\n  public priorities = [\n    {value:0, viewValue:\"High\"},\n    {value:1, viewValue:\"Middle\"},\n    {value:2, viewValue:\"Low\"}\n  ];\n\n  constructor(private websocketService: WebSocketService,\n              private doctorService:DoctorService) {\n  }\n\n  ngOnInit() {\n    if (!environment.isConnect){\n      this.websocketService.connect();\n      environment.isConnect = true;\n    }\n    this.doctorService.getAllPatients().subscribe((patients:any)=>{\n      if (patients){\n        for(let patient of patients){\n          this.patients.push(patient.patient.username);\n        }\n      }\n    });\n  }\n\n  OnSubmit(){\n    this.reminder.doctorName = this.doctorService.getUserName();\n    this.websocketService.sendReminder(this.reminder);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../../environments/environment';\nimport {Observable, Observer} from 'rxjs';\nimport {map} from 'rxjs/internal/operators';\nimport {JwtHelperService} from \"@auth0/angular-jwt\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DoctorService {\n\n  constructor(private http: HttpClient,\n              private jwtHelper:JwtHelperService) { }\n\n  getAllReminders():Observable<Object>{\n    return this.http.get(environment.getAllReminder).pipe(map(\n      data => {\n        return data;\n      }));\n  }\n\n  getAllPatients():Observable<Object>{\n    return this.http.get(environment.getAllPatients).pipe(map(\n      data=>{\n        return data;\n      }\n    ))\n  }\n\n  getUserName(){\n    const userInfo = this.jwtHelper.decodeToken(localStorage.getItem(environment.jwtName));\n    if (userInfo === null){\n      return '';\n    }\n    return userInfo.sub;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as Stomp from 'stompjs';\nimport {environment} from '../../../environments/environment';\nimport {Reminder} from '../../model/reminder';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class WebSocketService {\n  private stompClient;\n\n  constructor() {\n    const socket = new WebSocket(environment.wsconnetion);\n    this.stompClient = Stomp.over(socket);\n  }\n\n  connect(){\n    this.stompClient.connect({},frame=>{\n        this.stompClient.subscribe(environment.doctorsubscribe, (reminder)=>{\n          console.log(reminder.body);\n          alert('reminder is done');\n        })\n      })\n  }\n\n  disconnect(){\n    if (this.stompClient != null){\n      this.stompClient.disconnect();\n    }\n  }\n\n  sendReminder(reminder:Reminder){\n    console.log(reminder);\n    this.stompClient.send(environment.doctorsend,{},JSON.stringify(reminder));\n  }\n}\n","module.exports = \".hidden {\\n  visibility: hidden;\\n}\\n.loader-overlay {\\n  position: absolute;\\n  width: 100%;\\n  z-index: 500000;\\n  top: 0;\\n}\\n.loader {\\n  height: 4px;\\n  width: 100%;\\n  position: relative;\\n  overflow: hidden;\\n  background-color: #FFF;\\n}\\n.loader:before {\\n  display: block;\\n  position: absolute;\\n  content: \\\"\\\";\\n  left: -200px;\\n  width: 200px;\\n  height: 4px;\\n  background-color: red;\\n  -webkit-animation: loading 2s linear infinite;\\n          animation: loading 2s linear infinite;\\n}\\n@-webkit-keyframes loading {\\n  from {left: -200px; width: 30%;}\\n  50% {width: 30%;}\\n  70% {width: 70%;}\\n  80% {left: 50%;}\\n  95% {left: 120%;}\\n  to {left: 100%;}\\n}\\n@keyframes loading {\\n  from {left: -200px; width: 30%;}\\n  50% {width: 30%;}\\n  70% {width: 70%;}\\n  80% {left: 50%;}\\n  95% {left: 120%;}\\n  to {left: 100%;}\\n}\\n\"","module.exports = \"<div [class.hidden]=\\\"!show\\\">\\n  <div class=\\\"loader-overlay\\\">\\n    <div *ngIf=\\\"show\\\" class=\\\"loader\\\"></div>\\n  </div>\\n</div>\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {LoaderService} from '../services/loader.service';\nimport {Subscription} from 'rxjs';\nimport {LoaderState} from '../services/loaderState';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css']\n})\nexport class LoaderComponent implements OnInit, OnDestroy {\n  public show:boolean = false;\n  private subscription: Subscription;\n\n  constructor(private loaderService: LoaderService) { }\n\n  ngOnInit() {\n    this.subscription = this.loaderService.loaderState\n      .subscribe((state: LoaderState) => {\n        this.show = state.show;\n      });\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport {MatButtonModule, MatCheckboxModule} from '@angular/material';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\n\n@NgModule({\n  imports:[\n    MatButtonModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatProgressSpinnerModule\n  ]\n  ,\n  exports:[\n    MatButtonModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatProgressSpinnerModule\n  ]\n})\n\nexport class MaterialModule {}\n","import {Reminder} from './reminder';\n\nexport class Doctor {\n  constructor(\n    public username: String,\n    public password: String,\n    public reminders: Reminder[],\n    public title: String,\n  ) { }\n}\n","import {Patient} from './patient';\nimport {Doctor} from './doctor';\n\nexport enum PRIORITY{\n  HIGH,\n  MIDDLE,\n  LOW\n}\n\nexport class Reminder{\n  public reminderId:number = -1;\n  public description:string;\n  public duration:number;\n  public create_at:number;\n  public priority:PRIORITY;\n  public done: boolean = false;\n  public patientName:string;\n  public doctorName:string;\n\n  constructor(){}\n}\n","import { Injectable } from '@angular/core';\nimport {Doctor} from 'src/app/model/doctor';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/internal/operators';\nimport {Observable, Subject} from 'rxjs';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport {environment} from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthenticationService {\n  private logger = new Subject<boolean>();\n\n  constructor(private http: HttpClient,\n              private jwtHelper: JwtHelperService\n             ) { }\n\n  signin(doctor:Doctor):Observable<any>{\n    localStorage.clear();\n    return this.http.post<any>(environment.signin_url, {'doctor':doctor})\n      .pipe(map(user => {\n        // signin successful if there's a jwt token in the response\n        if (user && user.token) {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          localStorage.setItem(environment.jwtName, user.token);\n          this.logger.next(true);\n        }\n        return user;\n      }));\n  }\n\n  signout(){\n    // remove user from local storage to log user out\n    localStorage.removeItem(environment.jwtName);\n    this.logger.next(false);\n  }\n\n  isAuthenticated(): Observable<boolean> {\n    return this.logger;\n  }\n\n  checkJwtLogin(){\n    let jwt = localStorage.getItem(environment.jwtName);\n    if (jwt && !this.jwtHelper.isTokenExpired(jwt)){\n      this.http.get(environment.authenticate_url).subscribe((jwt:any)=>{\n        if(jwt && jwt.token){\n          this.logger.next(true);\n        }\n      })\n    }else{\n      this.logger.next(false);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport {LoaderState} from './loaderState';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  private loaderSubject = new Subject<LoaderState>();\n  loaderState = this.loaderSubject.asObservable();\n\n  constructor() { }\n\n  show() {\n    this.loaderSubject.next(<LoaderState>{ show: true });\n  }\n  hide() {\n    this.loaderSubject.next(<LoaderState>{ show: false });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpInterceptor, HttpResponse} from '@angular/common/http';\nimport {LoaderService} from './loader.service';\nimport {Observable} from 'rxjs';\nimport {HttpHandler} from '@angular/common/http/src/backend';\nimport {HttpRequest} from '@angular/common/http/src/request';\nimport {HttpEvent} from '@angular/common/http/src/response';\nimport {tap} from 'rxjs/internal/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderInterceptor implements HttpInterceptor{\n\n  constructor(private loaderService: LoaderService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\n    this.showLoader();\n\n    return next.handle(req).pipe(tap((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n          this.onEnd();\n        }\n      },\n      (err: any) => {\n          this.onEnd();\n      }));\n  }\n\n  private onEnd(): void {\n    this.hideLoader();\n  }\n  private showLoader(): void {\n    this.loaderService.show();\n  }\n  private hideLoader(): void {\n    this.loaderService.hide();\n  }\n}\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.signin-form{\\n  margin-left: 30%;\\n  margin-right: 30%;\\n  margin-top:5%;\\n  border: 1px solid grey;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <span class=\\\"card-title\\\">SIGN IN</span>\\n          <form #userForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\n            <div class=\\\"form-group\\\">\\n              <label data-error=\\\"Required field!\\\">Username:</label>\\n              <!-- 注意ngModel跟name属性的顺序不能搞反了 -->\\n              <input type=\\\"text\\\" required #name=\\\"ngModel\\\" class=\\\"validate\\\" [class.is-invalid]=\\\"name.invalid && name.touched\\\"\\n                     [(ngModel)]=\\\"userModel.username\\\" name=\\\"userName\\\">\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label data-error=\\\"Required field!\\\">Password:</label>\\n              <input type=\\\"password\\\" required #password=\\\"ngModel\\\" class=\\\"validate\\\" [class.is-invalid]=\\\"password.invalid && password.touched\\\"\\n                     [(ngModel)]=\\\"userModel.password\\\" name=\\\"password\\\">\\n            </div>\\n            <button [disabled]=\\\"!userForm.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" name=\\\"action\\\">Submit\\n            </button>\\n          </form>\\n      </div>\\n      <div class=\\\"card-action\\\">\\n        <a routerLink=\\\"/signup\\\">Sign up</a>\\n      </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthenticationService} from '../../services/authentication.service'\nimport {Doctor} from 'src/app/model/doctor';\nimport {first} from 'rxjs/internal/operators';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n  public userModel = new Doctor(null,null,null,null);\n  public loading = false;\n  public submitted = false;\n  public returnUrl: string = 'home';\n  public error = '';\n  public jwtTokenName = 'token';\n\n  constructor(\n    private authenticationService: AuthenticationService,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n    localStorage.removeItem(this.jwtTokenName);\n  }\n\n  onSubmit(){\n    console.log(this.userModel);\n    this.authenticationService.signin(this.userModel)\n      .pipe(first())\n      .subscribe(\n        data => {\n          if (data != null){\n            console.log('signin return data',data)\n            this.router.navigate([this.returnUrl]);\n          }\n        },\n        error => {\n          console.log(error);\n          this.error = error;\n          this.loading = false;\n          localStorage.removeItem(this.jwtTokenName);\n        });\n  }\n}\n","module.exports = \".container  {\\n  display: flex;\\n  position: absolute;\\n  top: 100px;\\n  left: 450px;\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n.container .row {\\n  margin: 0 auto;\\n}\\n\\n.card {\\n  width:400px;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"col s12 m6\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-content white-text\\\">\\n        <span class=\\\"card-title black-text\\\">Sign up</span>\\n        <form class=\\\"col s12 white\\\" #userRegistrationForm=\\\"ngForm\\\" (ngSubmit)=\\\"OnSubmit(userRegistrationForm)\\\">\\n\\n          <div class=\\\"form-group\\\">\\n            <label data-error=\\\"Required field!\\\" class=\\\"left black-text\\\">Username</label>\\n            <input type=\\\"text\\\" required #name=\\\"ngModel\\\" class=\\\"validate\\\"  name=\\\"UserName\\\" #UserName=\\\"ngModel\\\" [(ngModel)]=\\\"user.username\\\" >\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label data-error=\\\"Required field!\\\" class=\\\"left black-text\\\">Password</label>\\n            <input type=\\\"password\\\" required class=\\\"validate\\\" minlength=\\\"3\\\" name=\\\"Password\\\" #Password=\\\"ngModel\\\" [(ngModel)]=\\\"user.password\\\">\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label  class=\\\"left black-text\\\">Reenter your password</label>\\n            <input type=\\\"password\\\" required class=\\\"validate\\\" minlength=\\\"3\\\" name=\\\"Password\\\" #Password=\\\"ngModel\\\" [(ngModel)]=\\\"user.password\\\">\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label  class=\\\"left black-text\\\">Email</label>\\n            <input type=\\\"email\\\" required class=\\\"validate\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"user.password\\\">\\n          </div>\\n\\n          <button [disabled]=\\\"!userRegistrationForm.valid\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" name=\\\"action\\\">Submit</button>\\n        </form>\\n      </div>\\n      <div class=\\\"card-action\\\">\\n        <a routerLink=\\\"/signin\\\">Sign in</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Doctor} from '../../model/doctor';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  public user: Doctor = new Doctor(null,null,null,null);\n\n  constructor() { }\n\n\n  ngOnInit(): void {\n  }\n\n  OnSubmit(userRegistrationForm){\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s8 offset-s2\\\">\\n      <div class=\\\"card grey lighten-2\\\">\\n        <div class=\\\"card-tabs\\\">\\n          <ul class=\\\"tabs tabs-fixed-width tabs-transparent\\\">\\n            <li class=\\\"tab\\\">\\n              <a routerLink='/login' routerLinkActive='active'>Sign In</a>\\n            </li>\\n            <li class=\\\"tab\\\">\\n              <a  routerLink='/signup' routerLinkActive='active'>Sign Up</a>\\n            </li>\\n          </ul>\\n        </div>\\n        <div class=\\\"card-content white\\\">\\n          <div class=\\\"row\\\">\\n            <router-outlet></router-outlet>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  wsconnetion: 'ws://localhost:8080/connect',\n  doctorsubscribe: '/topic/receivedone',\n  doctorsend:'/app/sendreminder',\n  getAllReminder: '/doctor/getallreminders',\n  getAllPatients: '/doctor/getallpatients',\n\n  jwtName: 'token',\n  isConnect: false,\n\n  signin_url: '/user/signin',\n  signup_url: '/user/signup',\n  authenticate_url: '/user/authenticate'\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}